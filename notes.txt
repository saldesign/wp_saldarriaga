>	Wordpress Install
	>	Download
	>	Connect DB
	>	Authentication Unique Keys and Salts - Visit link in comment
	>	Prefixes - change wp_ prefix to randomword_
	>	Permalinks

>	Theme Unit Test
	>	Tests theme functionality
	>	Tools - Import File - Check Download and Import box for dummy content


>	Abstract Thinking
	>	"Type of content" rather than "actual content" 
	>	no hard-coded content
>	Planning
	>	Design/Wireframe each unique view to wireframe fidelity
>	Start with the most Common "views"
	>	Save Home for last

>	Building a theme
	>	Theme will not show up broken if naming conventions not followed
	1.	Style.css
		>	CSS Comment holds meta info about theme
			>	Allows WP to understand theme details
			>	No comment, wp won't recognize theme
			>	Name is bare minimum
			>	screenshot.png will be the themes thumbnail
			/*
			Theme Name: Scratch
			Theme URI: http://scratchtheme.com/
			Description:A bare bones starting point.
			Author: Melissa Cabral(wordpress.org username)
			Author URI: http://melissacabral.com/
			Version: 1.0
			Tags: black, blue, white, two-columns, fixed-width, custom-header, custom-background, threaded-comments, sticky-post editor-style, custom-menu  

			License: GPLv3
			License URI: license.txt

			General comments can go here too
			*/

	>	Template Parts
		>	Template Parts
				files that make up the pieces of a page (header, footer, sidebar)
			>	Store files directly within wordpress content
			>	Use template tag functions to call files
					https://docs.google.com/presentation/d/1JOaiGoPmCF8CMDS25ZEdluxeYA8aMG2_hKP3ac6zRW4/edit#slide=id.i70
					http://codex.wordpress.org/Template_Tags
		>	Include tags
				make it easy to place these in your template files

	>	bloginfo()
		Displays site info, gathered under info supplied in User Profile and General Options
		Automatically echo value provided
			https://docs.google.com/presentation/d/1JOaiGoPmCF8CMDS25ZEdluxeYA8aMG2_hKP3ac6zRW4/edit#slide=id.i76
			http://codex.wordpress.org/Function_Reference/bloginfo
	>	Directory Link URLs

		home_url()      http://www.example.com 
		site_url()         http://www.example.com  
		admin_url()     http://www.example.com/wp-admin  
		includes_url()  http://www.example.com/wp-includes  
		content_url()   http://www.example.com/wp-content 
		plugins_url()  http://www.example.com/wp-content/plugins wp_upload_dir()  http://www.example.com/wp-content/uploads





	>	Query String - Wordpress has its own query string abreviations for user activity
		>	Queries the database for the right content
		>	Happens automatically
		>	Only have to check and loop the query

	>	The Loop

		<?php if ( have_posts() ) : while ( have_posts() ) : the_post(); ?>
			the stuff that you put here will loop as many times as there are posts available
		<?php endwhile: else: ?>
			fall back if there are no posts to display
		<?php endif; ?>

	>	Post Template Tags - used in the loop

		the_ID()              Displays the ID number of the current post

		the_permalink()  		 Displays the link to the 'single' version of this post

		the_title()           Displays the title of this post

		the_content()      	 Displays the content of this post

		the_excerpt()     	 Displays a shortened version of the content

		the_category()    	 Displays list of categories this post is in 

		the_tags()            Displays the tags this post has been given
		 
		the_author()          Displays the name of the author of the post.




<?php if ( have_posts() ) : while ( have_posts() ) : the_post(); ?>
  <article id="post-ID" class="post">
    <h2 class="entry-title"> 
        <a href="SINGLE_POST_URL"> 
          POST TITLE 
        </a>
      </h2>
    <div class="entry-content">
      <p>POST CONTENT HERE A short portion of the post content. Etiam posuere adipiscing ante a euismod. Aliquam rutrum tempus ipsum a pulvinar. Cras arcu tellus, aliquam ac rutrum sit amet, consectetur et sapien. [...]</p>
    </div>
    <div class="postmeta">
      <span class="author"> Posted by: USERNAME </span>
      <span class="date"> DATE </span>
      <span class="num-comments"> X COMMENTS </span>
      <span class="categories"> 
          <a href="#" title="View all posts in Updates" >
            CATEGORY NAME
          </a>
        </span>
      <span class="tags">TAG, TAG, TAG</span>
    </div>
    <!-- end postmeta -->
  </article><!-- end post -->
<?php endwhile; else: ?>
  <h2>Oooops</h2>
  <p>sorry, no posts we're found</p>
<?php endif; ?>


> Day 3

Planning
	Repeatable Areas - Footers, headers, sidebars
		>	What pages/sections need to be different
	Flexibility - Long titles, many tags
	Map Core Wordpress Functionality  
	All content should be dynamic

Out of the Box
	Search
	Parent Child page relationships
	Comments
	Gravitar
	Rss 
	Pagination
	Image Resizing
	Admin

Info Architecture
	Not about individual pages
	Focused on unique layout types

Wireframe/Comps
	Consider which features of wordpress will handle each type of content area on the page

Template Hierarchy
	Theme may contain as many templates that index doesn't satisfy
	Control markup and content display of the different views of your site

Design Friendly Functionality
	Classes
		body_class()
		<body <?php body_class(); ?>> 
		 
		post_class()
		<article <?php post_class( 'my-class' ); ?>>  
		 
		sticky_class()
		<article <?php sticky_class(); ?>> 


	When viewing a page (in this case page ID 2), the body tag will look something like this:

	<body class="page page-id-2 page-template page-template-default logged-in">
	 
	If you wanted to write a style that affected all pages (but not blog posts, search results, archives, etc.), begin your selector with: 
	.page 
	 
	To style only this page, begin your selector:
	.page-id-2

	To style all pageviews when a user is logged in, begin with:
	.logged-in



	showing the published post with an ID of 25 that is in the notes category : 
	<div class="post-25 type-post category-4 category-notes status-publish hentry">
	 
	showing the published page with an ID of 687:
	<div class="post-687 page type-page status-publish hentry">
	 
	*hentry is the hAtom compliant way to class a single piece of content... in case you were curious. 
	*hentry is a good way to style all posts and pages


Navigation
	when viewing any page, WP automatically adds the classes

	.current_page_item  or  .current_page_parent


Image Sizing
	Set up sizes once wireframes are done
	past uploads will not change size when new settings are saved
		Plugin: regenerate thumbnails
	Need more than 3 img sizes
		add_image_size() in functions.php
	

> Functions

Look and feel - Functions.php
	should not be needed for the functionality of the theme
Content - Use Plugin
	Shortcodes, custom post types, taxonomies



> Hooks
	Action
		Trigger functions
	Filters	
		functions change output
